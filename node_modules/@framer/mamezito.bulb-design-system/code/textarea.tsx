import * as React from "react";
import { PropertyControls, ControlType } from "framer";
import { TextArea } from "@bulb/patterns/modules/TextArea";

interface Props {
  text: string;
  label: string;
  description: string;
  placeholder: string;
  status: string;
  errorMessage: string;
  width: number;
  height: number;
}

export class textarea extends React.Component {
  static defaultProps = {
    label:  null,
    description: null
    placeholder: null,
    status: "unknown",
    errorMessage: ""
  };

  static propertyControls: PropertyControls<Props> = {
    label: { type: ControlType.String, title: "Label" },
    description: { type: ControlType.String, title: "Description" },
    placeholder: { type: ControlType.String, title: "Placeholder" },
    errorMessage: { type: ControlType.String, title: "Error Message" }
    status: { 
        type: ControlType.SegmentedEnum, 
        title: "Status",
        options: ["unknown", "invalid", "valid"],
        optionTitles: ["default", "error", "success"]
      }
  };

  render() {
    const {
      label,
      description,
      placeholder,
      status,
      errorMessage, width, height
    } = this.props;
   
    return (
    
        <TextArea
           width={
            this.props.width
          }
          label={label}
          description={description}
          errorMessage={errorMessage}
          placeholder={placeholder}
          status={status}
        >
          something
        </TextArea>
    
    );
  }
}
