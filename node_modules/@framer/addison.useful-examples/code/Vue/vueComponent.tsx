import * as React from "react";
import * as Vue from "vue/dist/vue";
import VueElement from "./vueElement";

// Define type of property
interface Props {
  text: string;
}

export class vueComponent extends React.Component<Props> {
  static defaultProps = {
    height: 85,
    width: 300
  };

  el;
  componentWillReceiveProps(nextProps) {
    Object.keys(nextProps).forEach(key => {
      try {
        this.e.componentInstance[key] = nextProps[key];
      } catch (e) {
        console.log(key);
        console.log(e);
      }
    });
  }

  mountVue = el => {
    this.el = this.el || el;
    this.vue = new Vue({
      el: this.el,
      render: h => {
        this.e = h(VueElement, {
          props: this.props
        });

        return this.e;
      }
    });
  };

  render() {
    return (
      <div>
        <div ref={this.mountVue} />
      </div>
    );
  }
}
