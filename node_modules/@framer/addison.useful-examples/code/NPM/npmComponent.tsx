import * as React from "react";
import { PropertyControls, ControlType } from "framer";
import { Button } from "antd";
import "antd/dist/antd.css";

// Define type of property
interface Props {
  text: string;
  size: "default" | "small" | "large";
  disabled: boolean;
  ghost: boolean;
  type: "default" | "primary" | "ghost" | "dashed" | "danger";
  shape: "default" | "circle" | "round";
  color: string;
  width: number;
}

export class npmComponent extends React.Component<Props> {
  // Set default properties
  static defaultProps = {
    text: "Button",
    size: "default",
    disabled: false,
    ghost: false,
    type: "default",
    shape: "default",
    height: 32
  };

  // Items shown in property panel
  static propertyControls: PropertyControls = {
    text: {
      type: ControlType.String,
      title: "Text",
      placeholder: "Button"
    },
    size: {
      type: ControlType.Enum,
      options: ["default", "small", "large"],
      optionTitles: ["Default", "Small", "Large"],
      title: "Size"
    },
    disabled: {
      type: ControlType.Boolean,
      title: "Disabled",
      enabledTitle: "True",
      disabledTitle: "False"
    },
    color: {
      type: ControlType.Color,
      title: "Color"
    },
    ghost: {
      type: ControlType.Boolean,
      title: "Ghost",
      enabledTitle: "True",
      disabledTitle: "False"
    },
    type: {
      type: ControlType.Enum,
      options: ["default", "primary", "ghost", "dashed", "danger"],
      optionTitles: ["Default", "Primary", "Ghost", "Dashed", "Danger"],
      title: "Type"
    },
    shape: {
      type: ControlType.Enum,
      options: ["default", "circle", "round"],
      optionTitles: ["Default", "Circle", "Round"],
      title: "Type"
    }
  };

  render() {
    return (
      <div>
        <Button
          width={this.props.width}
          disabled={this.props.disabled}
          ghost={this.props.ghost}
          type={this.props.type}
          size={this.props.size}
          shape={this.props.shape}
          block={true}
          color={this.props.color}
        >
          {this.props.text}
        </Button>
      </div>
    );
  }
}
